name: Build and Push Auth Service to AWS ECR

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}  # Output the image tag to be used in the next job
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Determine the image tag
      id: set_tag
      run: echo "::set-output name=image_tag::econstruction-webng:${{ github.sha }}"

    - name: Build image for Auth Service
      run: |
        docker build -t ${{ steps.set_tag.outputs.image_tag }} -f Dockerfile .

  push-to-ecr:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build image
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ needs.build.outputs.image_tag }} -t ${{ steps.login-ecr.outputs.registry }}/econstruction-webng:latest -f Dockerfile .
        
    - name: Push the Image to Amazon ECR
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ needs.build.outputs.image_tag }}
        docker push ${{ steps.login-ecr.outputs.registry }}/econstruction-webng:latest
